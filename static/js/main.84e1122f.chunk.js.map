{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Main.jsx","redux/actions.js","redux/types.js","App.jsx","redux/mainReducer.js","redux/rootReducer.js","index.js"],"names":["Header","className","Component","links","icon","route","Footer","map","lnk","index","href","key","target","rel","Main","initialValues","fName","lName","gender","looking","mail","psw","confirmPsw","accept","validationSchema","Yup","shape","required","matches","email","min","oneOf","onSubmit","fields","a","resetForm","alert","props","addUser","error","console","log","errors","touched","name","type","placeholder","component","id","value","htmlFor","connect","dispatch","user","App","initialState","users","rootReducer","combineReducers","states","state","action","concat","store","createStore","compose","window","__REDUX_DEVTOOLS_EXTENSION__","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.84e1122f.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <div className='header'>\r\n                <h2>Sign Up</h2>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { FaFacebookF, FaInstagram, FaGithub, FaLinkedinIn } from 'react-icons/fa'\r\n\r\nconst links = [\r\n    {icon: <FaFacebookF />, route: 'https://www.facebook.com/martik.avagyan.1'},\r\n    {icon: <FaInstagram />, route: 'https://www.instagram.com/avagyan_069/'},\r\n    {icon: <FaGithub />, route: 'https://github.com/m-avagyan'},\r\n    {icon: <FaLinkedinIn />, route: 'https://am.linkedin.com/in/martik-avagyan-5985461b3'},\r\n];\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div className='footer'>\r\n                <div className='links'>\r\n                    {\r\n                        links.map((lnk, index) =>\r\n                            <a href={lnk.route} key={index} target='_blank' rel='noopener noreferrer' className='link'>\r\n                                {lnk.icon}\r\n                            </a>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { connect } from 'react-redux'\r\nimport { addUser } from '../redux/actions';\r\n\r\nclass Main extends Component { \r\n    render() {\r\n        return (\r\n            <Formik\r\n                initialValues={{\r\n                    fName: '',\r\n                    lName: '',\r\n                    gender: 'male',\r\n                    looking: 'jobs',\r\n                    mail: '',\r\n                    psw: '',\r\n                    confirmPsw: '',\r\n                    accept: false\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    fName: Yup.string()\r\n                        .required('First name is required')\r\n                        .matches(\r\n                            '^[a-zA-Z0-9_][a-zA-Z]*$',\r\n                            'First name must contain only letters'\r\n                        ),\r\n                    lName: Yup.string()\r\n                        .required('Last name is required')\r\n                        .matches(\r\n                            '^[a-zA-Z0-9_][a-zA-Z]*$',\r\n                            'Last name must contain only letters'\r\n                        ),\r\n                    mail: Yup.string()\r\n                        .email('Email is invalid')\r\n                        .required('Email is required'),\r\n                    psw: Yup.string()\r\n                        .min(8, 'Password must be at least 8 characters')\r\n                        .required('Password is required')\r\n                        .matches(\r\n                            '^(?=.*[a-z])(?=.*[0-9])',\r\n                            'Password must contain letters Ö‡ numbers'\r\n                        ),\r\n                    confirmPsw: Yup.string()\r\n                        .oneOf([Yup.ref('psw'), null], 'Passwords must match')\r\n                        .required('Confirm Password is required'),\r\n                    accept: Yup.bool()\r\n                        .oneOf([true], 'Accept Ts & Cs is required')\r\n                })}\r\n                onSubmit={async (fields, {resetForm}) => {\r\n                    alert(`Hello ${fields.fName}! You have registered successfully :)`)\r\n                    this.props.addUser(fields);\r\n                    try {\r\n                        resetForm({})\r\n                      } catch (error) {\r\n                        console.log(error)\r\n                      }\r\n                }}\r\n            >\r\n                {({ errors, touched }) => (\r\n                    <div className='form'>\r\n                        <Form>\r\n                            <div className='inp-group'>\r\n                                <Field name='fName' type='text'\r\n                                    className={'inp' + (errors.fName && touched.fName ? ' inp-err' : '')}\r\n                                    placeholder='Enter your first name *'\r\n                                />\r\n                                <ErrorMessage name='fName' component='p' className='error' />                              \r\n                            </div>\r\n                            <div className='inp-group'>\r\n                                <Field name='lName' type='text'\r\n                                    className={'inp' + (errors.lName && touched.lName ? ' inp-err' : '')}\r\n                                    placeholder='Enter your last name *'\r\n                                />\r\n                                <ErrorMessage name='lName' component='p' className='error' />                                   \r\n                            </div>\r\n                            <div className='inp-group inp-radio'>\r\n                                <p>Gender:</p>\r\n                                <div>\r\n                                    <Field name='gender' id='male' type='radio' value='male' />\r\n                                    <label htmlFor='male'>Male</label>\r\n                                </div>\r\n                                <div>\r\n                                    <Field name='gender' id='female' type='radio' value='female' />\r\n                                    <label htmlFor='female'>Female</label>\r\n                                </div>\r\n                            </div>\r\n                            <div className='inp-group'>\r\n                                <Field\r\n                                    component='select'\r\n                                    name='looking'\r\n                                >\r\n                                    <option value='jobs'>Looking for a job</option>\r\n                                    <option value='employee'>Looking for an employee</option>\r\n                                </Field>\r\n                            </div>\r\n                            <div className='inp-group'>\r\n                                <Field name='mail' type='email'\r\n                                    className={'inp' + (errors.mail && touched.mail ? ' inp-err' : '')}\r\n                                    placeholder='Enter your e-mail *'\r\n                                />\r\n                                <ErrorMessage name='mail' component='p' className='error' />                                 \r\n                            </div>\r\n                            <div className='inp-group'>\r\n                                <Field name='psw' type='password'\r\n                                    className={'inp' + (errors.psw && touched.psw ? ' inp-err' : '')}\r\n                                    placeholder='Create your password *'\r\n                                />\r\n                                <ErrorMessage name='psw' component='p' className='error' />    \r\n                            </div>\r\n                            <div className='inp-group'>\r\n                                <Field name='confirmPsw' type='password'\r\n                                    className={'inp' + (errors.confirmPsw && touched.confirmPsw ? ' inp-err' : '')}\r\n                                    placeholder='Confirm password *'\r\n                                />\r\n                                <ErrorMessage name='confirmPsw' component='p' className='error' />   \r\n                            </div>\r\n                            <div className='inp-group'>\r\n                                <Field type='checkbox' name='accept' id='accept' />\r\n                                <label htmlFor='accept' className={'accept' + (errors.accept && touched.accept ? ' accept-err' : '')}>\r\n                                    Accept Terms & Conditions *\r\n                                </label>      \r\n                            </div>     \r\n                            <button type='submit' className='btn'>Register</button>\r\n                        </Form>\r\n                    </div>\r\n                )}\r\n            </Formik>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addUser: (user) => {\r\n            dispatch(addUser(user))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Main);","import { ADD_USER } from \"./types\";\r\n\r\nexport function addUser(user) {\r\n    return {\r\n        type: ADD_USER,\r\n        user\r\n    }\r\n}","export const ADD_USER = 'ADD_USER'","import React, { Component } from 'react'\r\nimport './css/style.css'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport Main from './components/Main'\r\n\r\n\r\nexport default class App extends Component {\r\n    render() {\r\n        return (\r\n            <div className='wrapper'>\r\n                <div className='container'>\r\n                    <Header />\r\n                    <Main />\r\n                    <Footer />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import { ADD_USER } from './types'\r\n\r\nconst initialState = {\r\n    users: []\r\n}\r\n\r\nexport const mainReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_USER:\r\n            return {\r\n                ...state,\r\n                users: state.users.concat([action.user]),\r\n            }\r\n        default: return state\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { mainReducer } from \"./mainReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    states: mainReducer\r\n})","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App.jsx'\r\nimport { Provider } from 'react-redux'\r\nimport { createStore, compose } from 'redux'\r\nimport { rootReducer } from './redux/rootReducer.js'\r\n\r\nconst store = createStore(rootReducer, compose(\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n));\r\n\r\nconst app = <Provider store={store}>\r\n                <App />\r\n            </Provider>\r\n\r\nReactDOM.render(\r\n    app,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}